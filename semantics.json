[
  {
    "name": "instructions",
    "type": "text",
    "optional": true,
    "widget": "html",
    "label": "Instructions",
    "description": "Optional text to display above the activity.",
    "tags": [
      "strong",
      "em",
      "sub",
      "code"
    ],
    "font": {
      "size": true,
      "family": true,
      "color": true,
      "background": true
    }
  },
  {
    "name": "startingCode",
    "type": "text",
    "optional": true,
    "widget": "codeEditor",
    "language": "python",
    "label": "Starting Code",
    "description": "The code editor will be initialized with this value."
  },
  {
    "name": "solutionCode",
    "type": "text",
    "optional": true,
    "widget": "codeEditor",
    "language": "python",
    "label": "Solution Code",
    "description": "The code solution. If the grading method is set to 'Compare outputs', the activity will get max score if the output generated by this solution code is the same as the output generated by the student code."
  },
  {
    "name": "requireRunBeforeCheck",
    "type": "boolean",
    "default": false,
    "label": "Require the code to be runned before checking solution",
    "description": "If this option is checked, the button to check solution will only appear after the student tried to run his code. If the student change his code, he will have to run it again before checking."
  },
  {
    "name": "grading",
    "type": "group",
    "expanded": false,
    "label": "Grading",
    "fields": [
      {
        "name": "maxScore",
        "type": "number",
        "label": "Max Score",
        "description": "Maximum score the user can get",
        "default": 1,
        "min": 1,
        "step": 1
      },
      {
        "name": "gradingMethod",
        "type": "select",
        "label": "Grading method",
        "description": "How to grade the user code. The default Compare outputs code will give the user the max score if the output match the solution output. In programmed grading, you will have to write code to grade the user.",
        "default": "compareOutput",
        "options": [
          {
            "value": "compareOutputs",
            "label": "Compare outputs"
          },
          {
            "value": "programmedGrading",
            "label": "Programmed grading"
          }
        ]
      },
      {
        "name": "inputs",
        "type": "list",
        "label": "Executions inputs",
        "description": "When pressing the Check button, the student code will be executed automatically. If the student code call the <code>input</code> function, an empty string will be returned. You can however set here custom values. It is even possible to run the code multiple time, each execution with differents inputs.",
        "entity": "execution",
        "min": 1,
        "field": {
          "name": "inputs",
          "type": "list",
          "label": "Inputs",
          "description": "You can set here the values that will be returned by each call to the <code>input</code> function during this execution. Otherwise it will return an empty string.",
          "entity": "input",
          "min": 1,
          "field": {
            "name": "Input",
            "type": "text",
            "label": "Input",
            "optional": true
          }
        },
        "widget": "showWhen",
        "showWhen": {
          "rules": [
            {
              "field": "gradingMethod",
              "equals": "compareOutputs"
            }
          ]
        }
      },
      {
        "name": "executeBeforeGradingCode",
        "type": "text",
        "optional": true,
        "language": "python",
        "label": "Code to execute before when grading",
        "description": "This code will be executed before the student code when the Check button is pressed.",
        "widget": "showWhen",
        "showWhen": {
          "rules": [
            {
              "field": "gradingMethod",
              "equals": "programmedGrading"
            }
          ],
          "widget": "codeEditor"
        }
      },
      {
        "name": "gradingCode",
        "type": "text",
        "optional": true,
        "language": "python",
        "label": "Grading Code",
        "description": "Write there the code that will grade the student code. You can use multiple function :<br><code>h5p_setScore(x)</code> : Set user score to <code>x</code>.<br><code>h5p_getOutput()</code> : Return the outputed text.<br><code>h5p_output(text)</code> : Display <code>text</code> in the output.",
        "widget": "showWhen",
        "showWhen": {
          "rules": [
            {
              "field": "gradingMethod",
              "equals": "programmedGrading"
            }
          ],
          "widget": "codeEditor"
        }
      }
    ]
  },
  {
    "name": "advancedOptions",
    "type": "group",
    "label": "Advanced options",
    "importance": "low",
    "fields": [
      {
        "name": "executeBeforeCode",
        "type": "text",
        "optional": true,
        "widget": "codeEditor",
        "language": "python",
        "label": "Code to execute before",
        "description": "This code will be executed before the student code. You can for example add custom functions."
      }
    ]
  },
  {
    "name": "editorOptions",
    "type": "group",
    "label": "Editor options",
    "importance": "low",
    "fields": [
      {
        "name": "maxHeight",
        "type": "number",
        "label": "Max height",
        "description": "Max height (in pixels) of the editor. Set it to 0 if you don't want to put a max height.",
        "default": 600,
        "min": 100,
        "step": 1
      },
      {
        "name": "lineWrapping",
        "type": "boolean",
        "default": true,
        "label": "Automatic Line Wrapping",
        "description": "If a line is too long, display it on multiple line instead of showing an horizontal scrollbar. This does not affect this authoring view."
      },
      {
        "name": "foldGutter",
        "type": "boolean",
        "default": true,
        "label": "Allow to fold block",
        "description": "Display an icon at the left allowing to fold some portion of the code. This does not affect this authoring view."
      },
      {
        "name": "tabSize",
        "type": "number",
        "label": "Tab Size",
        "description": "Size of tabs on the display page. This does not affect this authoring view.",
        "min": 1,
        "max": 8,
        "step": 1,
        "default": 2
      },
      {
        "name": "highlightLines",
        "type": "text",
        "label": "Highlight Lines",
        "description": "Use this option to highlight some lines of the code. Use syntax 1,3,5-7 to highlight lines 1, 3, and 5 to 7.",
        "default": "",
        "optional": true
      },
      {
        "name": "readOnlyLines",
        "type": "text",
        "label": "Read-only lines",
        "description": "Use this option to prevent editions of some lines of the code. Use the same syntax as highlight lines but with additionnal posibility (see docs).",
        "default": "",
        "optional": true
      }
    ]
  },
  {
    "name": "behaviour",
    "type": "group",
    "label": "Behavioural settings",
    "importance": "low",
    "description": "These options will let you control how the task behaves.",
    "fields": [
      {
        "name": "enableRetry",
        "label": "Enable \"Retry\"",
        "type": "boolean",
        "importance": "low",
        "default": true,
        "optional": true
      },
      {
        "name": "enableSolutionsButton",
        "label": "Enable \"Solution\"",
        "type": "boolean",
        "importance": "low",
        "default": true,
        "optional": true
      }
    ]
  },
  {
    "name": "l10n",
    "type": "group",
    "common": true,
    "label": "User interface",
    "importance": "low",
    "fields": [
      {
        "name": "run",
        "type": "text",
        "label": "Text for \"Run\" button",
        "importance": "low",
        "default": "Run"
      },
      {
        "name": "stop",
        "type": "text",
        "label": "Text for \"Stop\" button",
        "importance": "low",
        "default": "Stop"
      },
      {
        "name": "checkAnswer",
        "type": "text",
        "label": "Text for \"Check\" button",
        "importance": "low",
        "default": "Check"
      },
      {
        "name": "tryAgain",
        "label": "Text for \"Retry\" button",
        "type": "text",
        "importance": "low",
        "default": "Retry"
      },
      {
        "name": "showSolution",
        "type": "text",
        "label": "Text for \"Show solution\" button",
        "importance": "low",
        "default": "Show solution"
      },
      {
        "name": "hideSolution",
        "type": "text",
        "label": "Text for \"Hide solution\" button",
        "importance": "low",
        "default": "Hide solution"
      }
    ]
  }
]